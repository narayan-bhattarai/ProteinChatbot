{"ast":null,"code":"//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n/* tslint:disable */\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport const API_BASE_URL = new InjectionToken('API_BASE_URL');\nexport class TodoItemsClient {\n  constructor(http, baseUrl) {\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl ?? \"\";\n  }\n  getTodoItemsWithPagination(listId, pageNumber, pageSize) {\n    let url_ = this.baseUrl + \"/api/TodoItems?\";\n    if (listId === undefined || listId === null) throw new Error(\"The parameter 'listId' must be defined and cannot be null.\");else url_ += \"ListId=\" + encodeURIComponent(\"\" + listId) + \"&\";\n    if (pageNumber === undefined || pageNumber === null) throw new Error(\"The parameter 'pageNumber' must be defined and cannot be null.\");else url_ += \"PageNumber=\" + encodeURIComponent(\"\" + pageNumber) + \"&\";\n    if (pageSize === undefined || pageSize === null) throw new Error(\"The parameter 'pageSize' must be defined and cannot be null.\");else url_ += \"PageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Accept\": \"application/json\"\n      })\n    };\n    return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processGetTodoItemsWithPagination(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processGetTodoItemsWithPagination(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processGetTodoItemsWithPagination(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        let result200 = null;\n        let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        result200 = PaginatedListOfTodoItemBriefDto.fromJS(resultData200);\n        return _observableOf(result200);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  createTodoItem(command) {\n    let url_ = this.baseUrl + \"/api/TodoItems\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(command);\n    let options_ = {\n      body: content_,\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      })\n    };\n    return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processCreateTodoItem(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processCreateTodoItem(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processCreateTodoItem(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        let result200 = null;\n        let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        result200 = resultData200 !== undefined ? resultData200 : null;\n        return _observableOf(result200);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  updateTodoItem(id, command) {\n    let url_ = this.baseUrl + \"/api/TodoItems/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(command);\n    let options_ = {\n      body: content_,\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processUpdateTodoItem(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processUpdateTodoItem(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processUpdateTodoItem(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return _observableOf(null);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  deleteTodoItem(id) {\n    let url_ = this.baseUrl + \"/api/TodoItems/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({})\n    };\n    return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processDeleteTodoItem(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processDeleteTodoItem(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processDeleteTodoItem(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return _observableOf(null);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  updateTodoItemDetail(id, command) {\n    let url_ = this.baseUrl + \"/api/TodoItems/UpdateDetail/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(command);\n    let options_ = {\n      body: content_,\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processUpdateTodoItemDetail(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processUpdateTodoItemDetail(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processUpdateTodoItemDetail(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return _observableOf(null);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  static {\n    this.ɵfac = function TodoItemsClient_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TodoItemsClient)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TodoItemsClient,\n      factory: TodoItemsClient.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport class TodoListsClient {\n  constructor(http, baseUrl) {\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl ?? \"\";\n  }\n  getTodoLists() {\n    let url_ = this.baseUrl + \"/api/TodoLists\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Accept\": \"application/json\"\n      })\n    };\n    return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processGetTodoLists(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processGetTodoLists(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processGetTodoLists(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        let result200 = null;\n        let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        result200 = TodosVm.fromJS(resultData200);\n        return _observableOf(result200);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  createTodoList(command) {\n    let url_ = this.baseUrl + \"/api/TodoLists\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(command);\n    let options_ = {\n      body: content_,\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      })\n    };\n    return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processCreateTodoList(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processCreateTodoList(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processCreateTodoList(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        let result200 = null;\n        let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        result200 = resultData200 !== undefined ? resultData200 : null;\n        return _observableOf(result200);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  updateTodoList(id, command) {\n    let url_ = this.baseUrl + \"/api/TodoLists/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(command);\n    let options_ = {\n      body: content_,\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\"\n      })\n    };\n    return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processUpdateTodoList(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processUpdateTodoList(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processUpdateTodoList(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return _observableOf(null);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  deleteTodoList(id) {\n    let url_ = this.baseUrl + \"/api/TodoLists/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({})\n    };\n    return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processDeleteTodoList(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processDeleteTodoList(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processDeleteTodoList(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return _observableOf(null);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  static {\n    this.ɵfac = function TodoListsClient_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TodoListsClient)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TodoListsClient,\n      factory: TodoListsClient.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport class WeatherForecastsClient {\n  constructor(http, baseUrl) {\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl ?? \"\";\n  }\n  getWeatherForecasts() {\n    let url_ = this.baseUrl + \"/api/WeatherForecasts\";\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      observe: \"response\",\n      responseType: \"blob\",\n      headers: new HttpHeaders({\n        \"Accept\": \"application/json\"\n      })\n    };\n    return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(response_ => {\n      return this.processGetWeatherForecasts(response_);\n    })).pipe(_observableCatch(response_ => {\n      if (response_ instanceof HttpResponseBase) {\n        try {\n          return this.processGetWeatherForecasts(response_);\n        } catch (e) {\n          return _observableThrow(e);\n        }\n      } else return _observableThrow(response_);\n    }));\n  }\n  processGetWeatherForecasts(response) {\n    const status = response.status;\n    const responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n    let _headers = {};\n    if (response.headers) {\n      for (let key of response.headers.keys()) {\n        _headers[key] = response.headers.get(key);\n      }\n    }\n    if (status === 200) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        let result200 = null;\n        let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        if (Array.isArray(resultData200)) {\n          result200 = [];\n          for (let item of resultData200) result200.push(WeatherForecast.fromJS(item));\n        } else {\n          result200 = null;\n        }\n        return _observableOf(result200);\n      }));\n    } else if (status !== 200 && status !== 204) {\n      return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      }));\n    }\n    return _observableOf(null);\n  }\n  static {\n    this.ɵfac = function WeatherForecastsClient_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || WeatherForecastsClient)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WeatherForecastsClient,\n      factory: WeatherForecastsClient.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport class PaginatedListOfTodoItemBriefDto {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      if (Array.isArray(_data[\"items\"])) {\n        this.items = [];\n        for (let item of _data[\"items\"]) this.items.push(TodoItemBriefDto.fromJS(item));\n      }\n      this.pageNumber = _data[\"pageNumber\"];\n      this.totalPages = _data[\"totalPages\"];\n      this.totalCount = _data[\"totalCount\"];\n      this.hasPreviousPage = _data[\"hasPreviousPage\"];\n      this.hasNextPage = _data[\"hasNextPage\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new PaginatedListOfTodoItemBriefDto();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    if (Array.isArray(this.items)) {\n      data[\"items\"] = [];\n      for (let item of this.items) data[\"items\"].push(item.toJSON());\n    }\n    data[\"pageNumber\"] = this.pageNumber;\n    data[\"totalPages\"] = this.totalPages;\n    data[\"totalCount\"] = this.totalCount;\n    data[\"hasPreviousPage\"] = this.hasPreviousPage;\n    data[\"hasNextPage\"] = this.hasNextPage;\n    return data;\n  }\n}\nexport class TodoItemBriefDto {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.listId = _data[\"listId\"];\n      this.title = _data[\"title\"];\n      this.done = _data[\"done\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new TodoItemBriefDto();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"listId\"] = this.listId;\n    data[\"title\"] = this.title;\n    data[\"done\"] = this.done;\n    return data;\n  }\n}\nexport class CreateTodoItemCommand {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.listId = _data[\"listId\"];\n      this.title = _data[\"title\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new CreateTodoItemCommand();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"listId\"] = this.listId;\n    data[\"title\"] = this.title;\n    return data;\n  }\n}\nexport class UpdateTodoItemCommand {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.title = _data[\"title\"];\n      this.done = _data[\"done\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new UpdateTodoItemCommand();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"title\"] = this.title;\n    data[\"done\"] = this.done;\n    return data;\n  }\n}\nexport class UpdateTodoItemDetailCommand {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.listId = _data[\"listId\"];\n      this.priority = _data[\"priority\"];\n      this.note = _data[\"note\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new UpdateTodoItemDetailCommand();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"listId\"] = this.listId;\n    data[\"priority\"] = this.priority;\n    data[\"note\"] = this.note;\n    return data;\n  }\n}\nexport var PriorityLevel;\n(function (PriorityLevel) {\n  PriorityLevel[PriorityLevel[\"None\"] = 0] = \"None\";\n  PriorityLevel[PriorityLevel[\"Low\"] = 1] = \"Low\";\n  PriorityLevel[PriorityLevel[\"Medium\"] = 2] = \"Medium\";\n  PriorityLevel[PriorityLevel[\"High\"] = 3] = \"High\";\n})(PriorityLevel || (PriorityLevel = {}));\nexport class TodosVm {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      if (Array.isArray(_data[\"priorityLevels\"])) {\n        this.priorityLevels = [];\n        for (let item of _data[\"priorityLevels\"]) this.priorityLevels.push(LookupDto.fromJS(item));\n      }\n      if (Array.isArray(_data[\"lists\"])) {\n        this.lists = [];\n        for (let item of _data[\"lists\"]) this.lists.push(TodoListDto.fromJS(item));\n      }\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new TodosVm();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    if (Array.isArray(this.priorityLevels)) {\n      data[\"priorityLevels\"] = [];\n      for (let item of this.priorityLevels) data[\"priorityLevels\"].push(item.toJSON());\n    }\n    if (Array.isArray(this.lists)) {\n      data[\"lists\"] = [];\n      for (let item of this.lists) data[\"lists\"].push(item.toJSON());\n    }\n    return data;\n  }\n}\nexport class LookupDto {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.title = _data[\"title\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new LookupDto();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"title\"] = this.title;\n    return data;\n  }\n}\nexport class TodoListDto {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.title = _data[\"title\"];\n      this.colour = _data[\"colour\"];\n      if (Array.isArray(_data[\"items\"])) {\n        this.items = [];\n        for (let item of _data[\"items\"]) this.items.push(TodoItemDto.fromJS(item));\n      }\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new TodoListDto();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"title\"] = this.title;\n    data[\"colour\"] = this.colour;\n    if (Array.isArray(this.items)) {\n      data[\"items\"] = [];\n      for (let item of this.items) data[\"items\"].push(item.toJSON());\n    }\n    return data;\n  }\n}\nexport class TodoItemDto {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.listId = _data[\"listId\"];\n      this.title = _data[\"title\"];\n      this.done = _data[\"done\"];\n      this.priority = _data[\"priority\"];\n      this.note = _data[\"note\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new TodoItemDto();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"listId\"] = this.listId;\n    data[\"title\"] = this.title;\n    data[\"done\"] = this.done;\n    data[\"priority\"] = this.priority;\n    data[\"note\"] = this.note;\n    return data;\n  }\n}\nexport class CreateTodoListCommand {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.title = _data[\"title\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new CreateTodoListCommand();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"title\"] = this.title;\n    return data;\n  }\n}\nexport class UpdateTodoListCommand {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.id = _data[\"id\"];\n      this.title = _data[\"title\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new UpdateTodoListCommand();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"id\"] = this.id;\n    data[\"title\"] = this.title;\n    return data;\n  }\n}\nexport class WeatherForecast {\n  constructor(data) {\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n  init(_data) {\n    if (_data) {\n      this.date = _data[\"date\"] ? new Date(_data[\"date\"].toString()) : undefined;\n      this.temperatureC = _data[\"temperatureC\"];\n      this.temperatureF = _data[\"temperatureF\"];\n      this.summary = _data[\"summary\"];\n    }\n  }\n  static fromJS(data) {\n    data = typeof data === 'object' ? data : {};\n    let result = new WeatherForecast();\n    result.init(data);\n    return result;\n  }\n  toJSON(data) {\n    data = typeof data === 'object' ? data : {};\n    data[\"date\"] = this.date ? this.date.toISOString() : undefined;\n    data[\"temperatureC\"] = this.temperatureC;\n    data[\"temperatureF\"] = this.temperatureF;\n    data[\"summary\"] = this.summary;\n    return data;\n  }\n}\nexport class SwaggerException extends Error {\n  constructor(message, status, response, headers, result) {\n    super();\n    this.isSwaggerException = true;\n    this.message = message;\n    this.status = status;\n    this.response = response;\n    this.headers = headers;\n    this.result = result;\n  }\n  static isSwaggerException(obj) {\n    return obj.isSwaggerException === true;\n  }\n}\nfunction throwException(message, status, response, headers, result) {\n  if (result !== null && result !== undefined) return _observableThrow(result);else return _observableThrow(new SwaggerException(message, status, response, headers, null));\n}\nfunction blobToText(blob) {\n  return new Observable(observer => {\n    if (!blob) {\n      observer.next(\"\");\n      observer.complete();\n    } else {\n      let reader = new FileReader();\n      reader.onload = event => {\n        observer.next(event.target.result);\n        observer.complete();\n      };\n      reader.readAsText(blob);\n    }\n  });\n}","map":{"version":3,"names":["mergeMap","_observableMergeMap","catchError","_observableCatch","Observable","throwError","_observableThrow","of","_observableOf","InjectionToken","HttpClient","HttpHeaders","HttpResponse","HttpResponseBase","API_BASE_URL","TodoItemsClient","constructor","http","baseUrl","jsonParseReviver","undefined","getTodoItemsWithPagination","listId","pageNumber","pageSize","url_","Error","encodeURIComponent","replace","options_","observe","responseType","headers","request","pipe","response_","processGetTodoItemsWithPagination","e","response","status","responseBlob","body","error","Blob","_headers","key","keys","get","blobToText","_responseText","result200","resultData200","JSON","parse","PaginatedListOfTodoItemBriefDto","fromJS","throwException","createTodoItem","command","content_","stringify","processCreateTodoItem","updateTodoItem","id","processUpdateTodoItem","deleteTodoItem","processDeleteTodoItem","updateTodoItemDetail","processUpdateTodoItemDetail","i0","ɵɵinject","factory","ɵfac","providedIn","TodoListsClient","getTodoLists","processGetTodoLists","TodosVm","createTodoList","processCreateTodoList","updateTodoList","processUpdateTodoList","deleteTodoList","processDeleteTodoList","WeatherForecastsClient","getWeatherForecasts","processGetWeatherForecasts","Array","isArray","item","push","WeatherForecast","data","property","hasOwnProperty","init","_data","items","TodoItemBriefDto","totalPages","totalCount","hasPreviousPage","hasNextPage","result","toJSON","title","done","CreateTodoItemCommand","UpdateTodoItemCommand","UpdateTodoItemDetailCommand","priority","note","PriorityLevel","priorityLevels","LookupDto","lists","TodoListDto","colour","TodoItemDto","CreateTodoListCommand","UpdateTodoListCommand","date","Date","toString","temperatureC","temperatureF","summary","toISOString","SwaggerException","message","isSwaggerException","obj","blob","observer","next","complete","reader","FileReader","onload","event","target","readAsText"],"sources":["C:\\MyFiles\\PersonalProject\\CleanArchitecture\\src\\Web\\ClientApp\\src\\app\\web-api-client.ts"],"sourcesContent":["//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v14.1.0.0 (NJsonSchema v11.0.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n\r\n/* tslint:disable */\r\n/* eslint-disable */\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\r\n\r\nexport interface ITodoItemsClient {\r\n    getTodoItemsWithPagination(listId: number, pageNumber: number, pageSize: number): Observable<PaginatedListOfTodoItemBriefDto>;\r\n    createTodoItem(command: CreateTodoItemCommand): Observable<number>;\r\n    updateTodoItem(id: number, command: UpdateTodoItemCommand): Observable<void>;\r\n    deleteTodoItem(id: number): Observable<void>;\r\n    updateTodoItemDetail(id: number, command: UpdateTodoItemDetailCommand): Observable<void>;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TodoItemsClient implements ITodoItemsClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ?? \"\";\r\n    }\r\n\r\n    getTodoItemsWithPagination(listId: number, pageNumber: number, pageSize: number): Observable<PaginatedListOfTodoItemBriefDto> {\r\n        let url_ = this.baseUrl + \"/api/TodoItems?\";\r\n        if (listId === undefined || listId === null)\r\n            throw new Error(\"The parameter 'listId' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"ListId=\" + encodeURIComponent(\"\" + listId) + \"&\";\r\n        if (pageNumber === undefined || pageNumber === null)\r\n            throw new Error(\"The parameter 'pageNumber' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"PageNumber=\" + encodeURIComponent(\"\" + pageNumber) + \"&\";\r\n        if (pageSize === undefined || pageSize === null)\r\n            throw new Error(\"The parameter 'pageSize' must be defined and cannot be null.\");\r\n        else\r\n            url_ += \"PageSize=\" + encodeURIComponent(\"\" + pageSize) + \"&\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetTodoItemsWithPagination(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetTodoItemsWithPagination(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<PaginatedListOfTodoItemBriefDto>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<PaginatedListOfTodoItemBriefDto>;\r\n        }));\r\n    }\r\n\r\n    protected processGetTodoItemsWithPagination(response: HttpResponseBase): Observable<PaginatedListOfTodoItemBriefDto> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = PaginatedListOfTodoItemBriefDto.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    createTodoItem(command: CreateTodoItemCommand): Observable<number> {\r\n        let url_ = this.baseUrl + \"/api/TodoItems\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(command);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processCreateTodoItem(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processCreateTodoItem(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<number>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<number>;\r\n        }));\r\n    }\r\n\r\n    protected processCreateTodoItem(response: HttpResponseBase): Observable<number> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n    \r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    updateTodoItem(id: number, command: UpdateTodoItemCommand): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/TodoItems/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(command);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUpdateTodoItem(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUpdateTodoItem(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processUpdateTodoItem(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return _observableOf(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    deleteTodoItem(id: number): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/TodoItems/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDeleteTodoItem(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDeleteTodoItem(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processDeleteTodoItem(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return _observableOf(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    updateTodoItemDetail(id: number, command: UpdateTodoItemDetailCommand): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/TodoItems/UpdateDetail/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(command);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUpdateTodoItemDetail(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUpdateTodoItemDetail(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processUpdateTodoItemDetail(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return _observableOf(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n}\r\n\r\nexport interface ITodoListsClient {\r\n    getTodoLists(): Observable<TodosVm>;\r\n    createTodoList(command: CreateTodoListCommand): Observable<number>;\r\n    updateTodoList(id: number, command: UpdateTodoListCommand): Observable<void>;\r\n    deleteTodoList(id: number): Observable<void>;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TodoListsClient implements ITodoListsClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ?? \"\";\r\n    }\r\n\r\n    getTodoLists(): Observable<TodosVm> {\r\n        let url_ = this.baseUrl + \"/api/TodoLists\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetTodoLists(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetTodoLists(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<TodosVm>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<TodosVm>;\r\n        }));\r\n    }\r\n\r\n    protected processGetTodoLists(response: HttpResponseBase): Observable<TodosVm> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = TodosVm.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    createTodoList(command: CreateTodoListCommand): Observable<number> {\r\n        let url_ = this.baseUrl + \"/api/TodoLists\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(command);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processCreateTodoList(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processCreateTodoList(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<number>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<number>;\r\n        }));\r\n    }\r\n\r\n    protected processCreateTodoList(response: HttpResponseBase): Observable<number> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\r\n    \r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    updateTodoList(id: number, command: UpdateTodoListCommand): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/TodoLists/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(command);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\",\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUpdateTodoList(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUpdateTodoList(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processUpdateTodoList(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return _observableOf(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n\r\n    deleteTodoList(id: number): Observable<void> {\r\n        let url_ = this.baseUrl + \"/api/TodoLists/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processDeleteTodoList(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processDeleteTodoList(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<void>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<void>;\r\n        }));\r\n    }\r\n\r\n    protected processDeleteTodoList(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return _observableOf(null as any);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n}\r\n\r\nexport interface IWeatherForecastsClient {\r\n    getWeatherForecasts(): Observable<WeatherForecast[]>;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WeatherForecastsClient implements IWeatherForecastsClient {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ?? \"\";\r\n    }\r\n\r\n    getWeatherForecasts(): Observable<WeatherForecast[]> {\r\n        let url_ = this.baseUrl + \"/api/WeatherForecasts\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processGetWeatherForecasts(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processGetWeatherForecasts(response_ as any);\r\n                } catch (e) {\r\n                    return _observableThrow(e) as any as Observable<WeatherForecast[]>;\r\n                }\r\n            } else\r\n                return _observableThrow(response_) as any as Observable<WeatherForecast[]>;\r\n        }));\r\n    }\r\n\r\n    protected processGetWeatherForecasts(response: HttpResponseBase): Observable<WeatherForecast[]> {\r\n        const status = response.status;\r\n        const responseBlob =\r\n            response instanceof HttpResponse ? response.body :\r\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\r\n        if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(WeatherForecast.fromJS(item));\r\n            }\r\n            else {\r\n                result200 = <any>null;\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap((_responseText: string) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf(null as any);\r\n    }\r\n}\r\n\r\nexport class PaginatedListOfTodoItemBriefDto implements IPaginatedListOfTodoItemBriefDto {\r\n    items?: TodoItemBriefDto[];\r\n    pageNumber?: number;\r\n    totalPages?: number;\r\n    totalCount?: number;\r\n    hasPreviousPage?: boolean;\r\n    hasNextPage?: boolean;\r\n\r\n    constructor(data?: IPaginatedListOfTodoItemBriefDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            if (Array.isArray(_data[\"items\"])) {\r\n                this.items = [] as any;\r\n                for (let item of _data[\"items\"])\r\n                    this.items!.push(TodoItemBriefDto.fromJS(item));\r\n            }\r\n            this.pageNumber = _data[\"pageNumber\"];\r\n            this.totalPages = _data[\"totalPages\"];\r\n            this.totalCount = _data[\"totalCount\"];\r\n            this.hasPreviousPage = _data[\"hasPreviousPage\"];\r\n            this.hasNextPage = _data[\"hasNextPage\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): PaginatedListOfTodoItemBriefDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new PaginatedListOfTodoItemBriefDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        if (Array.isArray(this.items)) {\r\n            data[\"items\"] = [];\r\n            for (let item of this.items)\r\n                data[\"items\"].push(item.toJSON());\r\n        }\r\n        data[\"pageNumber\"] = this.pageNumber;\r\n        data[\"totalPages\"] = this.totalPages;\r\n        data[\"totalCount\"] = this.totalCount;\r\n        data[\"hasPreviousPage\"] = this.hasPreviousPage;\r\n        data[\"hasNextPage\"] = this.hasNextPage;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IPaginatedListOfTodoItemBriefDto {\r\n    items?: TodoItemBriefDto[];\r\n    pageNumber?: number;\r\n    totalPages?: number;\r\n    totalCount?: number;\r\n    hasPreviousPage?: boolean;\r\n    hasNextPage?: boolean;\r\n}\r\n\r\nexport class TodoItemBriefDto implements ITodoItemBriefDto {\r\n    id?: number;\r\n    listId?: number;\r\n    title?: string | undefined;\r\n    done?: boolean;\r\n\r\n    constructor(data?: ITodoItemBriefDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.listId = _data[\"listId\"];\r\n            this.title = _data[\"title\"];\r\n            this.done = _data[\"done\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): TodoItemBriefDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new TodoItemBriefDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"listId\"] = this.listId;\r\n        data[\"title\"] = this.title;\r\n        data[\"done\"] = this.done;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ITodoItemBriefDto {\r\n    id?: number;\r\n    listId?: number;\r\n    title?: string | undefined;\r\n    done?: boolean;\r\n}\r\n\r\nexport class CreateTodoItemCommand implements ICreateTodoItemCommand {\r\n    listId?: number;\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: ICreateTodoItemCommand) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.listId = _data[\"listId\"];\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CreateTodoItemCommand {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CreateTodoItemCommand();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"listId\"] = this.listId;\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ICreateTodoItemCommand {\r\n    listId?: number;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class UpdateTodoItemCommand implements IUpdateTodoItemCommand {\r\n    id?: number;\r\n    title?: string | undefined;\r\n    done?: boolean;\r\n\r\n    constructor(data?: IUpdateTodoItemCommand) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.title = _data[\"title\"];\r\n            this.done = _data[\"done\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpdateTodoItemCommand {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpdateTodoItemCommand();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"title\"] = this.title;\r\n        data[\"done\"] = this.done;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IUpdateTodoItemCommand {\r\n    id?: number;\r\n    title?: string | undefined;\r\n    done?: boolean;\r\n}\r\n\r\nexport class UpdateTodoItemDetailCommand implements IUpdateTodoItemDetailCommand {\r\n    id?: number;\r\n    listId?: number;\r\n    priority?: PriorityLevel;\r\n    note?: string | undefined;\r\n\r\n    constructor(data?: IUpdateTodoItemDetailCommand) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.listId = _data[\"listId\"];\r\n            this.priority = _data[\"priority\"];\r\n            this.note = _data[\"note\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpdateTodoItemDetailCommand {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpdateTodoItemDetailCommand();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"listId\"] = this.listId;\r\n        data[\"priority\"] = this.priority;\r\n        data[\"note\"] = this.note;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IUpdateTodoItemDetailCommand {\r\n    id?: number;\r\n    listId?: number;\r\n    priority?: PriorityLevel;\r\n    note?: string | undefined;\r\n}\r\n\r\nexport enum PriorityLevel {\r\n    None = 0,\r\n    Low = 1,\r\n    Medium = 2,\r\n    High = 3,\r\n}\r\n\r\nexport class TodosVm implements ITodosVm {\r\n    priorityLevels?: LookupDto[];\r\n    lists?: TodoListDto[];\r\n\r\n    constructor(data?: ITodosVm) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            if (Array.isArray(_data[\"priorityLevels\"])) {\r\n                this.priorityLevels = [] as any;\r\n                for (let item of _data[\"priorityLevels\"])\r\n                    this.priorityLevels!.push(LookupDto.fromJS(item));\r\n            }\r\n            if (Array.isArray(_data[\"lists\"])) {\r\n                this.lists = [] as any;\r\n                for (let item of _data[\"lists\"])\r\n                    this.lists!.push(TodoListDto.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): TodosVm {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new TodosVm();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        if (Array.isArray(this.priorityLevels)) {\r\n            data[\"priorityLevels\"] = [];\r\n            for (let item of this.priorityLevels)\r\n                data[\"priorityLevels\"].push(item.toJSON());\r\n        }\r\n        if (Array.isArray(this.lists)) {\r\n            data[\"lists\"] = [];\r\n            for (let item of this.lists)\r\n                data[\"lists\"].push(item.toJSON());\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ITodosVm {\r\n    priorityLevels?: LookupDto[];\r\n    lists?: TodoListDto[];\r\n}\r\n\r\nexport class LookupDto implements ILookupDto {\r\n    id?: number;\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: ILookupDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): LookupDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new LookupDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ILookupDto {\r\n    id?: number;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class TodoListDto implements ITodoListDto {\r\n    id?: number;\r\n    title?: string | undefined;\r\n    colour?: string | undefined;\r\n    items?: TodoItemDto[];\r\n\r\n    constructor(data?: ITodoListDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.title = _data[\"title\"];\r\n            this.colour = _data[\"colour\"];\r\n            if (Array.isArray(_data[\"items\"])) {\r\n                this.items = [] as any;\r\n                for (let item of _data[\"items\"])\r\n                    this.items!.push(TodoItemDto.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): TodoListDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new TodoListDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"title\"] = this.title;\r\n        data[\"colour\"] = this.colour;\r\n        if (Array.isArray(this.items)) {\r\n            data[\"items\"] = [];\r\n            for (let item of this.items)\r\n                data[\"items\"].push(item.toJSON());\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ITodoListDto {\r\n    id?: number;\r\n    title?: string | undefined;\r\n    colour?: string | undefined;\r\n    items?: TodoItemDto[];\r\n}\r\n\r\nexport class TodoItemDto implements ITodoItemDto {\r\n    id?: number;\r\n    listId?: number;\r\n    title?: string | undefined;\r\n    done?: boolean;\r\n    priority?: number;\r\n    note?: string | undefined;\r\n\r\n    constructor(data?: ITodoItemDto) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.listId = _data[\"listId\"];\r\n            this.title = _data[\"title\"];\r\n            this.done = _data[\"done\"];\r\n            this.priority = _data[\"priority\"];\r\n            this.note = _data[\"note\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): TodoItemDto {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new TodoItemDto();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"listId\"] = this.listId;\r\n        data[\"title\"] = this.title;\r\n        data[\"done\"] = this.done;\r\n        data[\"priority\"] = this.priority;\r\n        data[\"note\"] = this.note;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ITodoItemDto {\r\n    id?: number;\r\n    listId?: number;\r\n    title?: string | undefined;\r\n    done?: boolean;\r\n    priority?: number;\r\n    note?: string | undefined;\r\n}\r\n\r\nexport class CreateTodoListCommand implements ICreateTodoListCommand {\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: ICreateTodoListCommand) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CreateTodoListCommand {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CreateTodoListCommand();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface ICreateTodoListCommand {\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class UpdateTodoListCommand implements IUpdateTodoListCommand {\r\n    id?: number;\r\n    title?: string | undefined;\r\n\r\n    constructor(data?: IUpdateTodoListCommand) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.title = _data[\"title\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpdateTodoListCommand {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpdateTodoListCommand();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"title\"] = this.title;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IUpdateTodoListCommand {\r\n    id?: number;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport class WeatherForecast implements IWeatherForecast {\r\n    date?: Date;\r\n    temperatureC?: number;\r\n    temperatureF?: number;\r\n    summary?: string | undefined;\r\n\r\n    constructor(data?: IWeatherForecast) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.date = _data[\"date\"] ? new Date(_data[\"date\"].toString()) : <any>undefined;\r\n            this.temperatureC = _data[\"temperatureC\"];\r\n            this.temperatureF = _data[\"temperatureF\"];\r\n            this.summary = _data[\"summary\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): WeatherForecast {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new WeatherForecast();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"date\"] = this.date ? this.date.toISOString() : <any>undefined;\r\n        data[\"temperatureC\"] = this.temperatureC;\r\n        data[\"temperatureF\"] = this.temperatureF;\r\n        data[\"summary\"] = this.summary;\r\n        return data;\r\n    }\r\n}\r\n\r\nexport interface IWeatherForecast {\r\n    date?: Date;\r\n    temperatureC?: number;\r\n    temperatureF?: number;\r\n    summary?: string | undefined;\r\n}\r\n\r\nexport class SwaggerException extends Error {\r\n    override message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any; };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isSwaggerException = true;\r\n\r\n    static isSwaggerException(obj: any): obj is SwaggerException {\r\n        return obj.isSwaggerException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader();\r\n            reader.onload = event => {\r\n                observer.next((event.target as any).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob);\r\n        }\r\n    });\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}